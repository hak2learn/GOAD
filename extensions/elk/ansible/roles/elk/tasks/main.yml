- name: "Update cache"
  apt:
    update_cache: true
    cache_valid_time: 86400

- name: Add required dependencies.
  apt:
    name:
      - apt-transport-https
      - gnupg2
      - unzip
    state: present
    update_cache: yes

- name: Add Elasticsearch apt key.
  apt_key:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present

- name: Add Elasticsearch repository.
  apt_repository:
    repo: 'deb https://artifacts.elastic.co/packages/{{ elasticsearch_version }}/apt stable main'
    state: present
    update_cache: true

- name: Install logstash
  apt:
    name: logstash
    state: present

- name: Install java
  apt:
    name: openjdk-11-jre
    state: present

- name: Install elasticsearch
  apt:
    name: elasticsearch
    state: present

- name: Install kibana
  apt:
    name: kibana
    state: present

- name: copy kibana config
  copy:
    src: kibana.yml
    dest: /etc/kibana/kibana.yml
    owner: "root"
    group: "kibana"
    mode: 0660

- name: elasticsearch change start timeout to 3min
  lineinfile:
    destfile: /usr/lib/systemd/system/elasticsearch.service
    regexp: 'TimeoutStartSec='
    line: 'TimeoutStartSec=180'

- name: copy elasticsearch config
  copy:
    src: elasticsearch.yml
    dest: /etc/elasticsearch/elasticsearch.yml
    owner: "root"
    group: "elasticsearch"
    mode: 0660

- name: copy logstash.yml
  copy:
    src: logstash.yml
    dest: /etc/logstash/logstash.yml
    owner: "root"
    group: "logstash"
    mode: 0640

- name: copy logstash config
  copy:
    src: logstash.conf
    dest: /etc/logstash/conf.d/logstash.conf
    owner: "root"
    group: "logstash"
    mode: 0660

- name: Create certs directory for Elasticsearch
  file:
    path: /etc/elasticsearch/certs
    state: directory
    owner: elasticsearch
    group: elasticsearch
    mode: 0750

- name: Generate self-signed certificate for Elasticsearch (single node)
  command: "/usr/share/elasticsearch/bin/elasticsearch-certutil cert --self-signed --pem --name instance --dns localhost,elk.example.com --ip 127.0.0.1,{{hostvars['elk'].ansible_host}} --out /etc/elasticsearch/certs/certs.zip"
  args:
    creates: /etc/elasticsearch/certs/certs.zip

- name: Unarchive generated certs
  unarchive:
    src: /etc/elasticsearch/certs/certs.zip
    dest: /etc/elasticsearch/certs/
    remote_src: yes

# Ensure a common group for Kibana and Logstash
- name: Create elk-certs group
  group:
    name: elk-certs
    state: present

# Add kibana and logstash users to the group
- name: Add Kibana and Logstash to elk-certs group
  user:
    name: "{{ item }}"
    groups: elk-certs
    append: yes
  loop:
    - kibana
    - logstash
    - elasticsearch

# Set directory ownership and permissions
- name: Ensure Elasticsearch certs directory has correct permissions
  file:
    path: /etc/elasticsearch/certs
    state: directory
    owner: elasticsearch
    group: elk-certs
    mode: 0750
    recurse: yes

# Adjust permissions for instance certificate
- name: Ensure instance.crt is readable by elk-certs group
  file:
    path: /etc/elasticsearch/certs/instance/instance.crt
    owner: elasticsearch
    group: elk-certs
    mode: 0640

# Adjust permissions for instance.key (keep it restricted)
- name: Ensure instance.key is only readable by elasticsearch
  file:
    path: /etc/elasticsearch/certs/instance/instance.key
    owner: elasticsearch
    group: elasticsearch
    mode: 0600
    
# Ensure /etc/elasticsearch itself is accessible by elk-certs group
- name: Ensure /etc/elasticsearch is traversable by elk-certs group
  file:
    path: /etc/elasticsearch
    state: directory
    owner: root
    group: elk-certs
    mode: 0750

- name: enable elasticsearch
  service:
    name: elasticsearch
    enabled: yes

- name: start elasticsearch
  service:
    name: elasticsearch
    state: started

- name: Restart Elasticsearch
  service:
    name: elasticsearch
    state: restarted

- name: enable logstash
  service:
    name: logstash
    enabled: yes    

- name: enable kibana
  service:
    name: kibana
    enabled: yes

- name: start logstash
  service:
    name: logstash
    state: started

- name: start kibana
  service:
    name: kibana
    state: started